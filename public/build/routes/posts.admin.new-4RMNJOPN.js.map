{
  "version": 3,
  "sources": ["../../../app/routes/posts.admin.new.tsx"],
  "sourcesContent": ["import { Form, useActionData } from \"@remix-run/react\";\nimport type { ActionArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport { createPost } from \"~/models/post.server\";\n\nexport const action = async ({ request }: ActionArgs) => {\n    const formData = await request.formData();\n\n    const title = formData.get(\"title\");\n    const slug = formData.get(\"slug\");\n    const markdown = formData.get(\"markdown\");\n\n    const errors = {\n        title: title ? null : \"Title is required\",\n        slug: slug ? null : \"Slug is required\",\n        markdown: markdown ? null : \"Markdown is required\",\n    };\n    const hasErrors = Object.values(errors).some(\n        (errorMessage) => errorMessage\n    );\n    if (hasErrors) {\n        return json(errors);\n    }\n\n    invariant(\n        typeof title === \"string\",\n        \"title must be a string\"\n    );\n    invariant(\n        typeof slug === \"string\",\n        \"slug must be a string\"\n    );\n    invariant(\n        typeof markdown === \"string\",\n        \"markdown must be a string\"\n    );\n\n    await createPost({ title, slug, markdown });\n\n    return redirect(\"/posts/admin\");\n};\n\nconst inputClassName = `w-full rounded border border-gray-500 px-2 py-1 text-lg`;\n\nexport default function NewPost() {\n    const errors = useActionData<typeof action>();\n\n    return (\n        <Form method=\"post\">\n            <p>\n                <label>\n                    Post Title:{\" \"}\n                    {errors?.title ? (\n                        <em className=\"text-red-600\">{errors.title}</em>\n                    ) : null}\n                    <input\n                        type=\"text\"\n                        name=\"title\"\n                        className={inputClassName}\n                    />\n                </label>\n            </p>\n            <p>\n                <label>\n                    Post Slug:{\" \"}\n                    {errors?.slug ? (\n                        <em className=\"text-red-600\">{errors.slug}</em>\n                    ) : null}\n                    <input\n                        type=\"text\"\n                        name=\"slug\"\n                        className={inputClassName}\n                    />\n                </label>\n            </p>\n            <p>\n                <label htmlFor=\"markdown\">\n                    Markdown:{\" \"}\n                    {errors?.markdown ? (\n                        <em className=\"text-red-600\">\n                            {errors.markdown}\n                        </em>\n                    ) : null}\n                </label>\n                <br />\n                <textarea\n                    id=\"markdown\"\n                    rows={20}\n                    name=\"markdown\"\n                    className={`${inputClassName} font-mono`}\n                />\n            </p>\n            <p className=\"text-right\">\n                <button\n                    type=\"submit\"\n                    className=\"rounded bg-blue-500 py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400 disabled:bg-blue-300\"\n                >\n                    Create Post\n                </button>\n            </p>\n        </Form>\n    );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAEA,kBAA+B;AAG/B,kBAA2B;AAkDH;AAXxB,IAAM,iBAAiB;AAER,SAAR,UAA2B;AAC9B,QAAM,SAAS,cAA6B;AAE5C,SACI,mDAAC,QAAK,QAAO,QACT;AAAA,uDAAC,OACG,6DAAC,WAAM;AAAA;AAAA,MACS;AAAA,OACX,iCAAQ,SACL,mDAAC,QAAG,WAAU,gBAAgB,iBAAO,SAArC;AAAA;AAAA;AAAA;AAAA,aAA2C,IAC3C;AAAA,MACJ;AAAA,QAAC;AAAA;AAAA,UACG,MAAK;AAAA,UACL,MAAK;AAAA,UACL,WAAW;AAAA;AAAA,QAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIA;AAAA,SATJ;AAAA;AAAA;AAAA;AAAA,WAUA,KAXJ;AAAA;AAAA;AAAA;AAAA,WAYA;AAAA,IACA,mDAAC,OACG,6DAAC,WAAM;AAAA;AAAA,MACQ;AAAA,OACV,iCAAQ,QACL,mDAAC,QAAG,WAAU,gBAAgB,iBAAO,QAArC;AAAA;AAAA;AAAA;AAAA,aAA0C,IAC1C;AAAA,MACJ;AAAA,QAAC;AAAA;AAAA,UACG,MAAK;AAAA,UACL,MAAK;AAAA,UACL,WAAW;AAAA;AAAA,QAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIA;AAAA,SATJ;AAAA;AAAA;AAAA;AAAA,WAUA,KAXJ;AAAA;AAAA;AAAA;AAAA,WAYA;AAAA,IACA,mDAAC,OACG;AAAA,yDAAC,WAAM,SAAQ,YAAW;AAAA;AAAA,QACZ;AAAA,SACT,iCAAQ,YACL,mDAAC,QAAG,WAAU,gBACT,iBAAO,YADZ;AAAA;AAAA;AAAA;AAAA,eAEA,IACA;AAAA,WANR;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,MACA,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAI;AAAA,MACJ;AAAA,QAAC;AAAA;AAAA,UACG,IAAG;AAAA,UACH,MAAM;AAAA,UACN,MAAK;AAAA,UACL,WAAW,GAAG;AAAA;AAAA,QAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA;AAAA,SAfJ;AAAA;AAAA;AAAA;AAAA,WAgBA;AAAA,IACA,mDAAC,OAAE,WAAU,cACT;AAAA,MAAC;AAAA;AAAA,QACG,MAAK;AAAA,QACL,WAAU;AAAA,QACb;AAAA;AAAA,MAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,KANJ;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OAnDJ;AAAA;AAAA;AAAA;AAAA,SAoDA;AAER;",
  "names": []
}
